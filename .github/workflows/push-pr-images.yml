name: Push PR Images

on:
  workflow_run:
    workflows:
    - Build
    types:
      - completed

jobs:
  push:
    name: Push PR images to GHCR
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    env:
      GHCR_REGISTRY: ghcr.io
      GHCR_IMAGE_REPO: ${{ format('{0}/{1}', 'ghcr.io', github.repository) }}

    steps:
      - name: Download claudio assets
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          name: claudio-arm64-and-amd64
        continue-on-error: true

      - name: Check if artifacts are present
        id: artifact-check
        run: |
          if [ -d "claudio-amd64" ] && [ -d "claudio-arm64" ]; then
            echo "Artifacts found."
            echo "found=true" >> $GITHUB_ENV
          else
            echo "Artifacts not found."
            echo "found=false" >> $GITHUB_ENV
          fi

      - name: Get claudio build information
        if: env.found == 'true'
        run: |
          echo "image=$(cat claudio-image)" >> "$GITHUB_ENV"

      - name: Log in to GitHub Container Registry
        if: env.found == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image tag from image name
        if: env.found == 'true'
        run: |
          # Extract just the tag part (pr-123) from full image name
          echo "IMAGE_TAG=$(echo ${{ env.image }} | cut -d: -f2)" >> $GITHUB_ENV

      - name: Load images from artifacts
        if: env.found == 'true'
        env:
          IMAGE_REPO: ${{ env.GHCR_IMAGE_REPO }}
        run: |
          podman load -i claudio-arm64/*.tar
          podman load -i claudio-amd64/*.tar

      - name: Push arch images
        if: env.found == 'true'
        env:
          IMAGE_REPO: ${{ env.GHCR_IMAGE_REPO }}
        run: make oci-push-arch

      - name: Create and push manifest
        if: env.found == 'true'
        env:
          IMAGE_REPO: ${{ env.GHCR_IMAGE_REPO }}
        run: |
          make oci-manifest-build
          make oci-manifest-push
